name: agent-router
on:
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: read         # lire le repo
  pull-requests: write   # commenter / modifier PR
  issues: write          # commenter (API issues/*)
  pages: write           # ‚Üê pour publier Pages
  id-token: write        # ‚Üê requis par deploy-pages

jobs:
  route:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      # üß† Lancement du cycle hebdo uniquement si le label est pr√©sent
      - name: Generate weekly report
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run run:weekly

      - name: Build sparkline cache
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run report:cache

      - name: Build HTML report(s)
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run report:html

      - name: Setup Pages
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      - name: Build HTML report
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run report:html

      # Configure l'environnement GitHub Pages
      - name: Setup Pages
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/configure-pages@v4

      # Upload le dossier 'report' comme artefact Pages
      - name: Upload Pages artifact
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      # D√©ploie vers GitHub Pages
      - name: Deploy to GitHub Pages
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weekly-html
          path: report/weekly-report.html

      # üñºÔ∏è Ajout d‚Äôun r√©sum√© visuel dans l‚Äôonglet "Summary"
      - name: Visual summary
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        shell: bash
        run: |
          node <<'NODE'
          const fs = require('fs');
          const p = JSON.parse(fs.readFileSync('data/portfolio.target.json','utf8'));
          const s = JSON.parse(fs.readFileSync('data/weekly-summary.json','utf8'));
          const rows = (p.target||[]).map(t => `| ${t.symbol} | ${(t.weight*100).toFixed(2)}% |`).join('\n') || '| _Aucune ligne_ | 0% |';
          const sectors = (s.summary||[]).map(x => `- **${x.sector}**: ${x.top.join(', ')}`).join('\n') || '_Aucun pick_';
          const md = [
            '## üìä Portfolio Weekly Summary',
            '',
            `**Risque:** **${p.riskStatus}**`,
            '',
            '| Symbole | Poids |',
            '|---|---|',
            rows,
            '',
            '### Picks par secteur',
            sectors
          ].join('\n');
          fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, md);
          NODE

      # üí¨ (Optionnel) Commentaire automatique sur la PR
      - name: Comment PR
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const portfolio = JSON.parse(fs.readFileSync('data/portfolio.target.json','utf8'));
            const summary = JSON.parse(fs.readFileSync('data/weekly-summary.json','utf8'));
            const rows = (portfolio.target||[]).map(t=>`| ${t.symbol} | ${(t.weight*100).toFixed(2)}% |`).join('\n');
            const sectors = (summary.summary||[]).map(x=>`- **${x.sector}**: ${x.top.join(', ')}`).join('\n');
            const body = [
              '### üìä Rapport Hebdo',
              `**Risque:** **${portfolio.riskStatus}**`,
              '',
              '| Symbole | Poids |',
              '|---|---|',
              rows,
              '',
              '### Picks par secteur',
              sectors
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

      # üì¶ Artefacts (pour t√©l√©charger les fichiers JSON)
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weekly-artifacts-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            data/weekly-summary.json
            data/portfolio.target.json
            data/recos.jsonl
            data/exec.log.jsonl
