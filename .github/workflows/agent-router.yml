name: agent-router
on:
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: read
  pull-requests: write
  issues: write
  pages: write
  id-token: write
  actions: write

jobs:
  route:
    runs-on: ubuntu-latest
    env:
      WEB_SEARCH_KEY: ${{ secrets.WEB_SEARCH_KEY }}
    outputs:
      published: ${{ steps.deploy-pages.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      # 🧠 Génération du rapport
      - name: Generate weekly report
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run run:weekly
        env:
          WEB_SEARCH_KEY: ${{ secrets.WEB_SEARCH_KEY }}

      # 🧮 Cache pour les sparklines
      - name: Build sparkline cache
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run report:cache

      # 🖼️ Rapports HTML
      - name: Build HTML report(s)
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        run: npm run report:html

      # 📝 Résumé Markdown dans Summary
      - name: Visual summary
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        shell: bash
        run: |
          node <<'NODE'
          const fs = require('fs');
          const p = JSON.parse(fs.readFileSync('data/portfolio.target.json','utf8'));
          const s = JSON.parse(fs.readFileSync('data/weekly-summary.json','utf8'));
          const rows = (p.target||[]).map(t=>`| ${t.symbol} | ${(t.weight*100).toFixed(2)}% |`).join('\n') || '| _Aucune ligne_ | 0% |';
          const sectors=(s.summary||[]).map(x=>`- **${x.sector}**: ${x.top.join(', ')}`).join('\n') || '_Aucun pick_';
          const md = [
            '## 📊 Portfolio Weekly Summary',
            '',
            `**Risque:** **${p.riskStatus}**`,
            '',
            '| Symbole | Poids |',
            '|---|---|',
            rows,
            '',
            '### Picks par secteur',
            sectors
          ].join('\n');
          fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, md);
          NODE

      # 💬 Commentaire sur la PR
      - name: Comment PR with summary
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const p = JSON.parse(fs.readFileSync('data/portfolio.target.json','utf8'));
            const s = JSON.parse(fs.readFileSync('data/weekly-summary.json','utf8'));
            const rows = (p.target||[]).map(t=>`| ${t.symbol} | ${(t.weight*100).toFixed(2)}% |`).join('\n') || '| _Aucune ligne_ | 0% |';
            const sectors=(s.summary||[]).map(x=>`- **${x.sector}**: ${x.top.join(', ')}`).join('\n') || '_Aucun pick_';
            const base = `https://${context.repo.owner}.github.io/${context.repo.repo}`;
            const body = [
              '### 📊 Rapport Hebdo',
              `**Risque:** **${p.riskStatus}**`,
              '',
              '| Symbole | Poids |',
              '|---|---|',
              rows,
              '',
              '### Picks par secteur',
              sectors,
              '',
              `🔗 **HTML latest :** ${base}/weekly-report.html`,
              `🗂️ **Historique :** ${base}/`
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

      # 📄 Publication GitHub Pages (report/)
      - name: Setup Pages
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        uses: actions/upload-pages-artifact@v3
        with:
          path: report

      - name: Deploy to GitHub Pages
        if: contains(join(toJson(github.event.pull_request.labels)), 'run:portfolio')
        id: deploy-pages
        uses: actions/deploy-pages@v4

  # 📦 Job séparé pour les artefacts JSON
  store-json:
    needs: route
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload artifacts (JSON)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weekly-artifacts-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            data/weekly-summary.json
            data/portfolio.target.json
            data/recos.jsonl
            data/exec.log.jsonl

- name: Upload ledger artifacts
  if: always()
  uses: actions/upload-artifact@v4
  with:
    name: ledger-${{ github.run_id }}-${{ github.run_attempt }}
    path: |
      data/ledger/nav.csv
      data/ledger/trades.csv
      data/ledger/positions.json
