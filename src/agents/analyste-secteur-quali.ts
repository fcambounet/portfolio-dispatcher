import type { Agent } from "../core/types.js";
import fs from "node:fs";
import path from "node:path";
import { webSearch } from "../core/web-search.js"; // wrapper gÃ©nÃ©rique (quâ€™on crÃ©e ensuite)

export const AnalysteSecteurQuali: Agent<{ sector: string }, any> = {
  name: "AS-Quali",
  handles: ["as.quali"],
  async handle({ sector }) {
    // ðŸ”¹ Ã‰tape 1 : requÃªte web synthÃ©tique
    const q = `Recent trends and key challenges in the ${sector} sector, last 3 months`;
    const results = await webSearch(q, 5);

    // ðŸ”¹ Ã‰tape 2 : rÃ©sumÃ© rapide
    const summary = results.map(r => `â€¢ ${r.title}`).join("\n");

    // ðŸ”¹ Ã‰tape 3 : persist
    const outPath = path.join("data", "research", "sectors");
    fs.mkdirSync(outPath, { recursive: true });
    fs.writeFileSync(
      path.join(outPath, `${sector}.json`),
      JSON.stringify({ sector, asOf: new Date().toISOString(), results }, null, 2)
    );

    return { sector, count: results.length, summary };
  }
};
